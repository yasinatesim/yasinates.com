/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IletisimImport } from './routes/iletisim'
import { Route as HakkimdaImport } from './routes/hakkimda'
import { Route as BlogImport } from './routes/blog'
import { Route as PostIdImport } from './routes/$postId'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const IletisimRoute = IletisimImport.update({
  id: '/iletisim',
  path: '/iletisim',
  getParentRoute: () => rootRoute,
} as any)

const HakkimdaRoute = HakkimdaImport.update({
  id: '/hakkimda',
  path: '/hakkimda',
  getParentRoute: () => rootRoute,
} as any)

const BlogRoute = BlogImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRoute,
} as any)

const PostIdRoute = PostIdImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$postId': {
      id: '/$postId'
      path: '/$postId'
      fullPath: '/$postId'
      preLoaderRoute: typeof PostIdImport
      parentRoute: typeof rootRoute
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogImport
      parentRoute: typeof rootRoute
    }
    '/hakkimda': {
      id: '/hakkimda'
      path: '/hakkimda'
      fullPath: '/hakkimda'
      preLoaderRoute: typeof HakkimdaImport
      parentRoute: typeof rootRoute
    }
    '/iletisim': {
      id: '/iletisim'
      path: '/iletisim'
      fullPath: '/iletisim'
      preLoaderRoute: typeof IletisimImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$postId': typeof PostIdRoute
  '/blog': typeof BlogRoute
  '/hakkimda': typeof HakkimdaRoute
  '/iletisim': typeof IletisimRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$postId': typeof PostIdRoute
  '/blog': typeof BlogRoute
  '/hakkimda': typeof HakkimdaRoute
  '/iletisim': typeof IletisimRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$postId': typeof PostIdRoute
  '/blog': typeof BlogRoute
  '/hakkimda': typeof HakkimdaRoute
  '/iletisim': typeof IletisimRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$postId' | '/blog' | '/hakkimda' | '/iletisim'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$postId' | '/blog' | '/hakkimda' | '/iletisim'
  id: '__root__' | '/' | '/$postId' | '/blog' | '/hakkimda' | '/iletisim'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PostIdRoute: typeof PostIdRoute
  BlogRoute: typeof BlogRoute
  HakkimdaRoute: typeof HakkimdaRoute
  IletisimRoute: typeof IletisimRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PostIdRoute: PostIdRoute,
  BlogRoute: BlogRoute,
  HakkimdaRoute: HakkimdaRoute,
  IletisimRoute: IletisimRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$postId",
        "/blog",
        "/hakkimda",
        "/iletisim"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$postId": {
      "filePath": "$postId.tsx"
    },
    "/blog": {
      "filePath": "blog.tsx"
    },
    "/hakkimda": {
      "filePath": "hakkimda.tsx"
    },
    "/iletisim": {
      "filePath": "iletisim.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
